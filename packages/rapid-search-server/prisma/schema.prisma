generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Backlink {
  id    String @id @default(uuid()) @unique
  
  targetUrl   String
  targetDomain     Domain @relation(name: "targetDomain", fields: [targetDomainId], references: [id])
  targetDomainId   String

  originUrl   String
  originDomain Domain @relation(name: "originDomain", fields: [originDomainId], references: [id])
  originDomainId   String

  analyzedDate DateTime?

  count     Int @default(1)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Domain {
  id String @id @default(uuid()) @unique

  content String @unique

  backlinks Backlink[] @relation("targetDomain")
  outboundLinks Backlink[] @relation("originDomain")
  pages     Page[]

  updatedAt DateTime @updatedAt 
  createdAt DateTime @default(now())
}

model Page {
  id String @id @default(uuid()) @unique

  url           String @unique
  domain        Domain @relation(fields: [domainId], references: [id])
  domainId      String
  metaTitle         String?
  metaDescription   String?  
  // some excerpts can be fetched at runtime
  // but this is for speed, convenience, and low-storage
  headline     String? 
  excerpt      String? // 240 chars
  summary      String?

  metaTitleNormal         String?
  metaDescriptionNormal   String?  
  headlineNormal          String? 
  excerptNormal           String? // 240 chars
  summaryNormal           String?
  keywords                Json?

  loadSpeedScore        Int // ms
  topicClassification   Interest @relation(fields: [topicClassificationId], references: [id])
  topicClassificationId String
  topicScore            Float // 0.0-1.0
  // backlinkScore caclulated by domain backlinks

  lastAnalyzedDate DateTime @default(now())

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Interest {
  id       String   @id @default(uuid()) @unique
  name     String
  generatedInterestSlug String @default("") @unique

  pages       Page[]  
  categories  Category[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Category {
  id       String   @id @default(uuid()) @unique
  name     String
  generatedCategorySlug String @default("") @unique

  interests Interest[]
  
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
